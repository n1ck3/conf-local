#
# plugins.conf -- weechat v0.3.8
#

[var]
fifo.fifo = "on"
guile.check_license = "on"
lua.check_license = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_pv = "on"
perl.buffers.color_curren5 = "7,0"
perl.buffers.color_current = "7,0"
perl.buffers.color_default = "239"
perl.buffers.color_hotlist_highlight = "255,1"
perl.buffers.color_hotlist_low = "245"
perl.buffers.color_hotlist_message = "216"
perl.buffers.color_hotlist_private = "255,1"
perl.buffers.color_number = "241"
perl.buffers.hide_merged_buffers = "off"
perl.buffers.indenting = "on"
perl.buffers.indenting_number = "on"
perl.buffers.short_names = "on"
perl.buffers.show_prefix = "off"
perl.buffers.show_prefix_empty = "on"
perl.check_license = "on"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.mplex.away_msg = "Detached head"
perl.mplex.change_away_stat = "on"
perl.mplex.emit_signals = "off"
perl.mplex.exec_script_cmds = "off"
perl.mplex.interval = "60"
perl.mplex.verbose = "on"
python.check_license = "on"
python.go.color_name = "216"
python.go.color_name_highlight = "196,233"
python.go.color_name_highlight_selected = "196,233"
python.go.color_name_selected = "255,233"
python.go.color_number = "237"
python.go.color_number_selected = "*78,233"
python.go.message = "Go to: "
python.go.short_name = "on"
python.go.sort_by_activity = "off"
python.go.use_core_instead_weechat = "off"
python.toggle_nicklist.action = "show"
python.toggle_nicklist.buffers = "irc.bb.&bitlbee"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = "daethorian:penis"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = "nl"
python.urlserver.http_hostname_display = ""
python.urlserver.http_port = "31580"
python.urlserver.http_port_display = "80"
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed (default: "darkgray")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (default: "")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
